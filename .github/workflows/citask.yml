name: CI Task

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/init@v3

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: spring-boot-app:latest
          push: false

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: security-scan-build:latest
          format: sarif
          output: trivy-results.sarif
          severity: 'CRITICAL,HIGH'
          timeout: '15m0s'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Run check style
        run: mvn checkstyle:check


  Integration-tests:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Start Application
        run: mvn spring-boot:run &

      - name: Wait for Spring Boot Application to Start
        run: sleep 30

      - name: Call HelloWorld Endpoint
        run: curl -s http://localhost:8085/helloworld | grep 'Hello World'


  push-docker-image:
        needs: security-scan
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Login to GitHub Container Registry
            uses: docker/login-action@v2
            with:
              registry: ghcr.io
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build Docker Image
            uses: docker/build-push-action@v5
            with:
              context: .
              tags: ghcr.io/${{ github.repository }}:latest
              push: true